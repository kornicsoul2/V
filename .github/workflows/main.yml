name: Traffic Simulator

on:
  workflow_dispatch:
    inputs:
      website_url:
        description: 'Website URL to simulate traffic for'
        required: true
      visits_required:
        description: 'Number of visits required'
        required: true
        default: 10

jobs:
  simulate-traffic:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests faker pyautogui

      - name: Simulate traffic
        env:
          WEBSITE_URL: ${{ github.event.inputs.website_url }}
          VISITS_REQUIRED: ${{ github.event.inputs.visits_required }}
        run: |
          import os
          import time
          import random
          from faker import Faker
          import requests
          import pyautogui

          fake = Faker()

          def spoof_browser_fingerprint():
              user_agent = fake.user_agent()
              screen_resolution = f"{random.randint(800, 1920)}x{random.randint(600, 1080)}"
              os_type = random.choice(['Windows', 'Mac', 'Linux'])
              language = random.choice(['en-US', 'en-GB', 'fr-FR', 'de-DE'])
              time_zone = random.choice(['UTC', 'GMT', 'EST', 'PST'])
              return {
                  'User-Agent': user_agent,
                  'Screen-Resolution': screen_resolution,
                  'OS': os_type,
                  'Language': language,
                  'Time-Zone': time_zone
              }

          def simulate_mouse_movement():
              for _ in range(5):
                  x = random.randint(0, 1920)
                  y = random.randint(0, 1080)
                  pyautogui.moveTo(x, y, duration=0.5)

          def simulate_visit(url):
              headers = spoof_browser_fingerprint()
              print(f"Simulating visit with headers: {headers}")
              response = requests.get(url, headers=headers)
              if response.status_code == 200:
                  print(f"Successfully visited {url}")
              else:
                  print(f"Failed to visit {url}")

          website_url = os.getenv('https://grownectar.blogspot.com/')
          visits_required = int(os.getenv('5000'))

          for i in range(visits_required):
              print(f"Visit {i + 1}/{visits_required}")
              simulate_visit(website_url)
              simulate_mouse_movement()
              time.sleep(random.randint(30, 60))  # Simulate 30-60 seconds of visit time
